# 关于 监听事件 的简单示例: 欢迎新人
# 以下写法仅适用于 v2.0.0 以后的 `listeners` 配置文件夹

# 监听的类型
#  可前往 https://github.com/PigeonYuze/YamlBot/tree/master/docs/config/ListenerConfig.md 查看所有受支持的事件
type: 'MemberJoinEvent'
# 限定接受信息的 Bot 为 0 时 不限制
objectBotId: 0
# 事件过滤器 可通过 %js-JS表达式% 使用js提供布尔值进行过滤
filter: true
# 是否填充内部占位符值 当为否时，你无法获取事件内容，[objectBotId] 将会失效
provideEventAllValue: true
# 事件监听优先级
#  在广播时, 事件监听器的调用顺序为 (从左到右): HIGHEST > HIGH > NORMAL > LOW > LOWEST > MONITOR
#  若左侧的监听器拦截了信息，优先级较低 (靠右) 的监听器将不会被调用.
priority: NORMAL
# 读取指定的子类
#  `all` 表示全部子类都读取
#  可前往 https://github.com/PigeonYuze/YamlBot/tree/master/docs/config/ListenerConfig.md 查看事件子类
readSubclassObjectName:
  - all
# 运行操作的声明周期，一般使用者不需变更此项
parentScope: PLUGIN_SCOPE
# 是否只仅监听一次
#  如果为`true`，在监听到首次事件后便会关闭，无法再次打开
isListenOnce: false
# 运行的操作
#  不同的是，你可以使用:
#   > use: EVENT
#  调用事件内部的函数，其余均与 [Command] 操作相同
run:
  - use: MESSAGE_MANAGER # 发送信息库
    call: sendMessageToGroup # 选择内容为发送第一个信息
    args:
      - '%call-group%' # 事件内置的变量, 此处将替换为事件对应的群号
      - '欢迎新人！' # 信息内容
    name: only_run # 名称，这里没有再次调用，可以乱写x